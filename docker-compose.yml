version: "3.9"

services:
  sklinik_app:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    container_name: sklinik_app
    # restart: always
    volumes:
      - .:/var/www/html
      - /var/www/html/storage
      - /var/www/html/bootstrap/cache
    ports:
      - "9000:9000"
    depends_on:
      - sklinik_postgres
      - sklinik_redis
      - sklinik_node
    networks:
      - sklinik_network

  sklinik_nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
    container_name: sklinik_nginx
    # restart: always
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - sklinik_app
    networks:
      - sklinik_network

  sklinik_redis:
    image: redis:7
    container_name: sklinik_redis
    # restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - sklinik_network

  sklinik_postgres:
    image: postgres:17
    container_name: sklinik_postgres
    # restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: sklinik
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sklinik_network

  sklinik_node:
    build:
      context: .
      dockerfile: docker/Dockerfile.node
    container_name: sklinik_node
    # restart: always
    ports:
      - "5173:5173"
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - /var/www/html/node_modules
    command: ["pnpm", "run", "dev"]
    networks:
      - sklinik_network

volumes:
  postgres_data:

networks:
  sklinik_network:
    driver: bridge
